<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
     http://www.springframework.org/schema/rabbit  
     http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd">
     
	<!--配置connection-factory，指定连接rabbit server参数 -->
	<rabbit:connection-factory id="connectionFactory" virtual-host="/" username="fxkj" password="123" host="172.17.17.198" port="5672" />

	<!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
	<rabbit:admin id="connectAdmin" connection-factory="connectionFactory" />

	<!--定义queue -->
	<rabbit:queue name="queueTest" durable="true" auto-delete="false" exclusive="false" declared-by="connectAdmin" />

	<!-- 定义direct exchange，绑定queueTest -->
	<rabbit:direct-exchange name="exchangeTest" durable="true" auto-delete="false" declared-by="connectAdmin">
		<rabbit:bindings>
			<rabbit:binding queue="queueTest" key="queueTestKey"/>
		</rabbit:bindings>
	</rabbit:direct-exchange>

	<!--定义rabbit template用于数据的接收和发送 -->
	<rabbit:template id="amqpTemplate" connection-factory="connectionFactory" exchange="exchangeTest" />

	<!-- 消息接收者 -->
	<bean id="messageReceiver" class="com.fxkj.mq.consumer.MessageConsumer" />

	<!-- queue litener 观察监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 -->
	<rabbit:listener-container connection-factory="connectionFactory">
		<rabbit:listener queues="queueTest" ref="messageReceiver" />
	</rabbit:listener-container>

	<!--定义queue -->
	<rabbit:queue name="queueHello" durable="true" auto-delete="false" exclusive="false" declared-by="connectAdmin" />

	<!-- 定义direct exchange，绑定queueTest -->
	<rabbit:direct-exchange name="exchangeTest" durable="true" auto-delete="false" declared-by="connectAdmin">
		<rabbit:bindings>
			<rabbit:binding queue="queueHello" key="queueTestHello" />
		</rabbit:bindings>
	</rabbit:direct-exchange>

	<!-- 消息接收者 -->
	<bean id="receiverHello" class="com.fxkj.mq.consumer.HelloConsumer" />

	<!-- queue litener 观察监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 -->
	<rabbit:listener-container connection-factory="connectionFactory">
		<rabbit:listener queues="queueHello" ref="receiverHello" />
	</rabbit:listener-container>

	<!-- 分隔线 -->
	<!--配置connection-factory，指定连接rabbit server参数 -->
	<rabbit:connection-factory id="connectionFactory2" virtual-host="/" username="fxkj" password="123" host="172.17.17.198" port="5672" />

	<!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
	<rabbit:admin id="connectAdmin2" connection-factory="connectionFactory2" />

	<!--定义queue -->
	<rabbit:queue name="queueFxkj" durable="true" auto-delete="false" exclusive="false" declared-by="connectAdmin2" />

	<!-- 定义direct exchange，绑定queueTest -->
	<rabbit:topic-exchange name="exchangeTest2" durable="true" auto-delete="false" declared-by="connectAdmin2">
		<rabbit:bindings>
			<rabbit:binding queue="queueFxkj" pattern="fxkj.#" />
		</rabbit:bindings>
	</rabbit:topic-exchange>

	<!--定义rabbit template用于数据的接收和发送 -->
	<rabbit:template id="amqpTemplate2" connection-factory="connectionFactory2" exchange="exchangeTest2" />

	<!-- 消息接收者 -->
	<bean id="recieverFxkj" class="com.fxkj.mq.consumer.FxkjConsumer" />

	<!-- queue litener 观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 -->
	<rabbit:listener-container connection-factory="connectionFactory2">
		<rabbit:listener queues="queueFxkj" ref="recieverFxkj" />
	</rabbit:listener-container>
</beans>  